--- #################### 模块共享配置 ####################
spring:
  profiles:
    include: module # 详见somersault-cloud-config-module模块下application-module.yaml

--- #################### 数据库相关配置 ####################
spring:
  datasource:
    dynamic: # 多数据源配置
      primary: master
      datasource:
        master:
          name: somersault_cloud_infra
          url: jdbc:mysql://${MYSQL_MASTER_ADDR:127.0.0.1:3306}/${spring.datasource.dynamic.datasource.master.name}?allowMultiQueries=true&useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true&nullCatalogMeansCurrent=true # MySQL Connector/J 8.X 连接的示例
          username: somersault_cloud
          password: ${MYSQL_PASSWORD:MySQLP@ssword4somersault_cloud}
          driver-class-name: com.mysql.cj.jdbc.Driver
        slave: # 模拟从库，可根据自己需要修改
          name: somersault_cloud_infra
          url: jdbc:mysql://${MYSQL_SLAVE_ADDR:127.0.0.1:3306}/${spring.datasource.dynamic.datasource.slave.name}?allowMultiQueries=true&useUnicode=true&useSSL=false&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&autoReconnect=true&nullCatalogMeansCurrent=true # MySQL Connector/J 8.X 连接的示例
          driver-class-name: com.mysql.cj.jdbc.Driver
          username: somersault_cloud
          password: ${MYSQL_PASSWORD:MySQLP@ssword4somersault_cloud}

  # Redis 配置
  redis:
    ###################以下为redis单机模式配置###########################
    #host: 127.0.0.1    # Redis服务器地址
    #port: 6379         # Redis服务器连接端口
    #database: 0        # Redis数据库索引（默认为0）
    #password: 123456   # Redis服务器连接密码（默认为空）
    #timeout: 3000      # 连接超时时间（毫秒）
    ###################以下为redis哨兵增加的配置###########################
    database: 0        # Redis数据库索引（默认为0）
    password: ${REDIS_PASSWORD:RedisP@ssword4somersault_cloud}   # Redis服务器连接密码（默认为空）
    timeout: 3000      # 连接超时时间（毫秒）
#    sentinel:
#      nodes: ${REDIS_SENTINEL_NODES_ADDR:192.168.1.201:26379,192.168.1.202:26379,192.168.1.203:26379} # 集群哨兵节点配置，多个节点之间用英文逗号分割
#      master: ${REDIS_SENTINEL_MASTER_NAME:redis_master} # Redis主节点名称，哨兵配置文件中的名称
#    lettuce: # Redis的Java驱动包,使用lettuce连接池
#      pool:
#        max-active: 200 # 连接池最大连接数（使用负值表示没有限制）
#        max-wait: -1    # 连接池最大阻塞等待时间（使用负值表示没有限制）
#        max-idle: 10    # 连接池中的最大空闲连接 (默认为8)
#        min-idle: 0     # 连接池中的最小空闲连接

--- #################### MQ 消息队列相关配置 ####################
spring:
  cloud:
    # Spring Cloud Stream 配置项，对应 BindingServiceProperties 类
    stream:
      #      function:
      #        definition: roleRefreshConsumer;roleMenuRefreshConsumer;userRoleRefreshConsumer;
      # Binding 配置项，对应 BindingProperties Map
      bindings:
        roleRefresh-out-0:
          destination: system_role_refresh
        roleRefreshConsumer-in-0:
          destination: system_role_refresh
          group: system_role_refresh_consumer_group
      # Spring Cloud Stream RocketMQ 配置项
      rocketmq:
        # RocketMQ Binder 配置项，对应 RocketMQBinderConfigurationProperties 类
        binder:
          name-server: ${ROCKETMQ_ADDR:127.0.0.1:9876} # RocketMQ Namesrv 地址
        default: # 默认 bindings 全局配置
          producer: # RocketMQ Producer 配置项，对应 RocketMQProducerProperties 类
            group: infra_producer_group # 生产者分组
            send-type: SYNC # 发送模式，SYNC 同步

    # Spring Cloud Bus 配置项，对应 BusProperties 类
    bus:
      enabled: true # 是否开启，默认为 true
      id: ${spring.application.name}:${server.port} # 编号，Spring Cloud Alibaba 建议使用“应用:端口”的格式
      destination: springCloudBus # 目标消息队列，默认为 springCloudBus

--- #################### 定时任务相关配置 ####################

xxl:
  job:
    admin:
      addresses: http://127.0.0.1:9090/xxl-job-admin/ # 调度中心部署跟地址，集群多个地址逗号分隔
    executor:
      appname: ${spring.application.name} # 执行器 AppName
      logpath: ${user.home}/logs/xxl-job/${spring.application.name} # 执行器运行日志文件存储磁盘路径
      ip: ${XXL_JOB_EXECUTOR_IP:} # 取Nacos注册的IP兼容Docker容器运行模式
      port: ${XXL_JOB_EXECUTOR_PORT:9999} # 默认端口为9999，实际部署调整为服务端口偏移+10000
    accessToken: XxlJobToken4somersault_cloud # 执行器通讯TOKEN

--- #################### 框架相关配置 ####################

biz:
  info:
    version: 1.0.0
    base-package: xyz.entdiy.somersault.module.infra
  swagger:
    title: 管理后台
    description: 提供管理员管理的所有功能
    version: ${biz.info.version}
    base-package: ${biz.info.base-package}
  codegen:
    base-package: xyz.entdiy.somersault
    db-schemas: ${spring.datasource.dynamic.datasource.master.name}
    front-type: 21
  error-code: # 错误码相关配置项
    constants-class-list:
      - xyz.entdiy.somersault.module.infra.enums.ErrorCodeConstants
  tenant: # 多租户相关配置项
    ignore-urls:
      - /admin-api/infra/file/*/get/** # 获取图片，和租户无关
    ignore-tables:
      - infra_codegen_column
      - infra_codegen_table
      - infra_test_demo
      - infra_config
      - infra_file_config
      - infra_file
      - infra_file_content
      - infra_job
      - infra_job_log
      - infra_job_log
      - infra_data_source_config
